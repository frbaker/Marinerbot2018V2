// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


//#include <iostream>
//#include <string>
#include "ctre/Phoenix.h"
#include "Elevator.h"
#include "../RobotMap.h"

Elevator::Elevator() : frc::Subsystem("Elevator") {
	elevatorTalon = RobotMap::elevatorElevatorTalon;

    joyValue = 0;
}

void Elevator::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());

	elevatorTalon->ConfigSelectedFeedbackSensor(FeedbackDevice::CTRE_MagEncoder_Relative, 0, 10);

	//Create a control Loop
	elevatorTalon->SetNeutralMode(NeutralMode::Brake);
	elevatorTalon->Config_kP(0,2.0,10);
	elevatorTalon->Config_kI(0,0.0,10);
	elevatorTalon->Config_kD(0,0.0,10);
	elevatorTalon->Config_kF(0,0.0,10);

}

void Elevator::Periodic() {


}


// Put methods for controlling this subsystem
// here. Call these from Commands.

int Elevator::GetElPosition(){
	int elevatorEncoderPosition = elevatorTalon->GetSelectedSensorPosition(0);
	//std::cout 	<< "Elevator encoder position is: " << elevatorEncoderPosition << std::endl;
	return elevatorEncoderPosition;
}

void Elevator::SetElPositionToZero(){


	elevatorTalon->SetSelectedSensorPosition(0,0,0);
}

void Elevator::RaiseElevator(){


	elevatorTalon->Set(0.8);

}
void Elevator::LowerElevator(){


	elevatorTalon->Set(-0.8);
}
void Elevator::ElevatorStop(){
	//Stops and holds in place
	//int elpos = GetElPosition();
	//elevatorTalon->Set(ControlMode::Position,elpos);

	//elevatorTalon->Set(0);
elevatorTalon->StopMotor();



}
void Elevator::TakeJoy(double joyValue){

	elevatorTalon->Set(joyValue);
}
